import cv2
from ultralytics import YOLO
import mediapipe as mp
import os
from datetime import datetime

# T·∫°o th∆∞ m·ª•c l∆∞u ·∫£nh n·∫øu ch∆∞a t·ªìn t·∫°i
output_dir = "captures"
os.makedirs(output_dir, exist_ok=True)

# Load YOLOv8 model
model = YOLO('runs/detect/yolov8_dang_ngoi/weights/best.pt')

# Kh·ªüi t·∫°o MediaPipe Pose
mp_pose = mp.solutions.pose
pose = mp_pose.Pose(static_image_mode=False, model_complexity=1,
                    enable_segmentation=False, min_detection_confidence=0.5)
mp_drawing = mp.solutions.drawing_utils

# M·ªü webcam
cap = cv2.VideoCapture(0)
if not cap.isOpened():
    print("‚ùå Kh√¥ng th·ªÉ m·ªü webcam.")
    exit()

while True:
    ret, frame = cap.read()
    if not ret:
        print("‚ùå Kh√¥ng th·ªÉ ƒë·ªçc frame t·ª´ webcam.")
        break

    results = model(frame)
    annotated_frame = frame.copy()

    for r in results:
        boxes = r.boxes
        for box in boxes:
            cls = int(box.cls[0])
            conf = float(box.conf[0])
            label = model.names[cls]

            if conf < 0.7:
                continue

            x1, y1, x2, y2 = map(int, box.xyxy[0])
            person_roi = frame[y1:y2, x1:x2]

            # B·ªè qua n·∫øu v√πng crop kh√¥ng h·ª£p l·ªá
            if person_roi.size == 0:
                continue

            # X·ª≠ l√Ω MediaPipe
            person_rgb = cv2.cvtColor(person_roi, cv2.COLOR_BGR2RGB)
            results_pose = pose.process(person_rgb)

            if results_pose.pose_landmarks:
                mp_drawing.draw_landmarks(person_roi, results_pose.pose_landmarks, mp_pose.POSE_CONNECTIONS)

            annotated_frame[y1:y2, x1:x2] = person_roi

            # V·∫Ω bounding box v√† label
            cv2.rectangle(annotated_frame, (x1, y1), (x2, y2), (0, 255, 0), 2)
            cv2.putText(annotated_frame, f"{label} ({conf:.2f})", (x1, y1 - 10),
                        cv2.FONT_HERSHEY_SIMPLEX, 0.9, (0, 255, 0), 2)

            # N·∫øu l√† t∆∞ th·∫ø bad th√¨ ch·ª•p v√† l∆∞u ·∫£nh
            if label.lower() == "bad":
                timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
                filename = f"{output_dir}/bad_{timestamp}.jpg"
                cv2.imwrite(filename, annotated_frame)
                print(f"üì∏ ƒê√£ l∆∞u ·∫£nh c·∫£nh b√°o: {filename}")

    cv2.imshow('üéØ YOLOv8 + MediaPipe Pose', annotated_frame)
    if cv2.waitKey(1) & 0xFF == 27:  # Nh·∫•n ESC ƒë·ªÉ tho√°t
        break

cap.release()
cv2.destroyAllWindows()
